name: Release Packages

on:
  workflow_dispatch:
    inputs:
      jerni_bump:
        description: "Version bump type for @jerni/jerni-3"
        type: choice
        required: true
        options:
          - patch
          - minor
          - major
          - none
        default: "patch"
      next_dev_bump:
        description: "Version bump type for @jerni/next-dev"
        type: choice
        required: true
        options:
          - patch
          - minor
          - major
          - none
        default: "patch"
      mongodb_store_bump:
        description: "Version bump type for @jerni/store-mongodb"
        type: choice
        required: true
        options:
          - patch
          - minor
          - major
          - none
        default: "patch"
  release:
    types: [published]

jobs:
  parse-release:
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    outputs:
      jerni_bump: ${{ steps.parse.outputs.jerni_bump }}
      next_dev_bump: ${{ steps.parse.outputs.next_dev_bump }}
      mongodb_store_bump: ${{ steps.parse.outputs.mongodb_store_bump }}
    steps:
      - name: Parse release body
        id: parse
        uses: actions/github-script@v7
        with:
          script: |
            const body = context.payload.release.body;
            const lines = body.split('\n');

            let jerniMatch = body.match(/^@jerni\/jerni-3:\s*(major|minor|patch|none)\s*$/m);
            let nextDevMatch = body.match(/^@jerni\/next-dev:\s*(major|minor|patch|none)\s*$/m);
            let mongodbStoreMatch = body.match(/^@jerni\/store-mongodb:\s*(major|minor|patch|none)\s*$/m);

            core.setOutput('jerni_bump', jerniMatch ? jerniMatch[1] : 'none');
            core.setOutput('next_dev_bump', nextDevMatch ? nextDevMatch[1] : 'none');
            core.setOutput('mongodb_store_bump', mongodbStoreMatch ? mongodbStoreMatch[1] : 'none');

  release-packages:
    needs: [parse-release]
    if: github.event_name == 'workflow_dispatch' || needs.parse-release.outputs.jerni_bump != 'none' || needs.parse-release.outputs.next_dev_bump != 'none' || needs.parse-release.outputs.mongodb_store_bump != 'none'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          registry-url: "https://registry.npmjs.org"

      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Configure Git
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Release @jerni/jerni-3
        if: github.event.inputs.jerni_bump != 'none' || needs.parse-release.outputs.jerni_bump != 'none'
        working-directory: packages/jerni
        run: |
          BUMP_TYPE=${{ github.event.inputs.jerni_bump || needs.parse-release.outputs.jerni_bump }}
          bun run bump-$BUMP_TYPE
          bun run release
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Release @jerni/store-mongodb
        if: github.event.inputs.mongodb_store_bump != 'none' || needs.parse-release.outputs.mongodb_store_bump != 'none'
        working-directory: packages/jerni-store-mongodb
        run: |
          BUMP_TYPE=${{ github.event.inputs.mongodb_store_bump || needs.parse-release.outputs.mongodb_store_bump }}
          bun run bump-$BUMP_TYPE
          bun run release
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Release @jerni/next-dev
        if: github.event.inputs.next_dev_bump != 'none' || needs.parse-release.outputs.next_dev_bump != 'none'
        working-directory: packages/jerni-next-dev-plugin
        run: |
          BUMP_TYPE=${{ github.event.inputs.next_dev_bump || needs.parse-release.outputs.next_dev_bump }}
          bun run bump-$BUMP_TYPE
          bun run release
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Push version changes
        run: |
          git push
          git push --tags
